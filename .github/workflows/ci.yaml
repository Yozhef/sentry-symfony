name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - 3.5.x

jobs:
  tests:
      name: Tests
      runs-on: ubuntu-latest
      continue-on-error: ${{ matrix.experimental == true }}
      strategy:
          fail-fast: false
          matrix:
              php:
                - '8.0'
                - '7.4'
                - '7.3'
                - '7.2'
              composer_option:
                - ''
                - '--prefer-lowest'
              sentry_constraint: [false]
              symfony_constraint: [false]
              experimental: [false]
              include:
                  - description: 'Symfony 4.4'
                    php: '7.3'
                    symfony_constraint: 4.4.*
                  - description: 'Symfony 3.4'
                    php: '7.2'
                    symfony_constraint: 3.4.*
                    env:
                        SYMFONY_DEPRECATIONS_HELPER: disabled

      steps:
          - name: Action Checkout
            uses: actions/checkout@v2

          - name: Setup PHP
            uses: shivammathur/setup-php@v2
            with:
              php-version: ${{ matrix.php }}
              coverage: xdebug

          - name: Action Cache
            uses: actions/cache@v2
            with:
              path: ~/.composer/cache/files
              key: ${{ matrix.php }}-${{ matrix.symfony_constraint }}-${{ matrix.composer_option }}

          - name: Symfony Messagert
            run: |
              sed -ri '/symfony\/(monolog-bundle|phpunit-bridge|messenger)/! s/"symfony\/(.+)": "(.+)"/"symfony\/\1": "'${{ matrix.symfony_constraint }}'"/' composer.json;
            if: matrix.symfony_constraint

          - name: Remove Symfony Messager in Symfony 3.4 or composer_option === --prefer-lowest
            run: composer remove --dev symfony/messenger --no-update
            if: matrix.symfony_constraint == '3.4.*' || matrix.composer_option == '--prefer-lowest'

          - name: Install dependencies
            run: composer update --no-progress --ansi ${{ matrix.composer_option }}

          - name: Install sentry/sentry lib
            run: composer require sentry/sentry dev-develop
            if: matrix.sentry_constraint == 'dev-develop'

          - name: Run tests
            run: vendor/bin/phpunit --coverage-clover=build/coverage-report.xml

          - name: Upload code coverage
            uses: codecov/codecov-action@v1
            with:
                file: build/coverage-report.xml
